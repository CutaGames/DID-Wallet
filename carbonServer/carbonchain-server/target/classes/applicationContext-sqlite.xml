<?xml version="1.0" encoding="UTF-8"?>

<beans
		xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:util="http://www.springframework.org/schema/util"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
      http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd">
    
    <!-- 将所有具有@Transactional注解的Bean自动配置为声明式事务支持 -->
    <tx:annotation-driven proxy-target-class="true"/>

	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="dbType" value="sqlite"></property>
		<property name="url" value="${jdbc.url}" />
		<property name="driverClassName" value="${jdbc.driverClassName}"></property>
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="1" />
		<property name="maxActive" value="20" />
		<property name="minIdle" value="10" />
		<property name="maxWait" value="60000" />
		<!--<property name="poolPreparedStatements" value="false"></property>
		<property name="maxOpenPreparedStatements" value="20"></property> -->
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="25200000" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="logAbandoned" value="true" />
        <property name="filters" value="log4j" />

		<property name="validationQuery" value="select 1" />
	 </bean>

	<bean id="sqlSessionFactory"  class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:myBatisConfig.xml" />
		<property name="mapperLocations">
			<array>
<!--				<value>classpath*:com/carbonchain/server/mapperxml/*.xml</value>-->
				<value>classpath*:/mapperxml/*.xml</value>
			</array>
		</property>
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="com.carbonchain.server.mapper">
		</property>
	</bean>
	

	<!-- mybatis的sqlsessionFactorybean：org.mybatis.spring.SqlSessionFactoryBean-->
	<!-- 3、配置mybatis-plus的sqlSessionFactory -->
<!--	<bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">-->
<!--		<property name="dataSource" ref="dataSource" />-->
<!--		<property name="configLocation" value="classpath:mybatis-config.xml"/>-->
<!--		<property name="typeAliasesPackage" value="com.zhu.mybatisplus.entity"/>-->
<!--	</bean>-->
<!--	&lt;!&ndash; 4、DAO接口所在包名，Spring会自动查找其下的类 &ndash;&gt;-->
<!--	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
<!--		<property name="basePackage" value="com.zhu.mybatisplus.dao" />-->
<!--		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>-->
<!--	</bean>-->


	<!-- Transactional -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<qualifier value="transactionManager"></qualifier>
	</bean>

</beans>
