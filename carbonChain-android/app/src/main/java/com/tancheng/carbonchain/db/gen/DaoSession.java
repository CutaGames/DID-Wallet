package com.tancheng.carbonchain.db.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.tancheng.carbonchain.activities.asset.wallet.db.entity.AddressBook;
import com.tancheng.carbonchain.activities.asset.wallet.db.entity.ETHWallet;
import com.tancheng.carbonchain.activities.asset.wallet.db.entity.TransactionRecord;
import com.tancheng.carbonchain.activities.asset.wallet.db.entity.WalletBalance;
import com.tancheng.carbonchain.activities.asset.wallet.db.entity.WalletCoin;
import com.tancheng.carbonchain.bean.UserInfoBean;

import com.tancheng.carbonchain.db.gen.AddressBookDao;
import com.tancheng.carbonchain.db.gen.ETHWalletDao;
import com.tancheng.carbonchain.db.gen.TransactionRecordDao;
import com.tancheng.carbonchain.db.gen.WalletBalanceDao;
import com.tancheng.carbonchain.db.gen.WalletCoinDao;
import com.tancheng.carbonchain.db.gen.UserInfoBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig addressBookDaoConfig;
    private final DaoConfig eTHWalletDaoConfig;
    private final DaoConfig transactionRecordDaoConfig;
    private final DaoConfig walletBalanceDaoConfig;
    private final DaoConfig walletCoinDaoConfig;
    private final DaoConfig userInfoBeanDaoConfig;

    private final AddressBookDao addressBookDao;
    private final ETHWalletDao eTHWalletDao;
    private final TransactionRecordDao transactionRecordDao;
    private final WalletBalanceDao walletBalanceDao;
    private final WalletCoinDao walletCoinDao;
    private final UserInfoBeanDao userInfoBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        addressBookDaoConfig = daoConfigMap.get(AddressBookDao.class).clone();
        addressBookDaoConfig.initIdentityScope(type);

        eTHWalletDaoConfig = daoConfigMap.get(ETHWalletDao.class).clone();
        eTHWalletDaoConfig.initIdentityScope(type);

        transactionRecordDaoConfig = daoConfigMap.get(TransactionRecordDao.class).clone();
        transactionRecordDaoConfig.initIdentityScope(type);

        walletBalanceDaoConfig = daoConfigMap.get(WalletBalanceDao.class).clone();
        walletBalanceDaoConfig.initIdentityScope(type);

        walletCoinDaoConfig = daoConfigMap.get(WalletCoinDao.class).clone();
        walletCoinDaoConfig.initIdentityScope(type);

        userInfoBeanDaoConfig = daoConfigMap.get(UserInfoBeanDao.class).clone();
        userInfoBeanDaoConfig.initIdentityScope(type);

        addressBookDao = new AddressBookDao(addressBookDaoConfig, this);
        eTHWalletDao = new ETHWalletDao(eTHWalletDaoConfig, this);
        transactionRecordDao = new TransactionRecordDao(transactionRecordDaoConfig, this);
        walletBalanceDao = new WalletBalanceDao(walletBalanceDaoConfig, this);
        walletCoinDao = new WalletCoinDao(walletCoinDaoConfig, this);
        userInfoBeanDao = new UserInfoBeanDao(userInfoBeanDaoConfig, this);

        registerDao(AddressBook.class, addressBookDao);
        registerDao(ETHWallet.class, eTHWalletDao);
        registerDao(TransactionRecord.class, transactionRecordDao);
        registerDao(WalletBalance.class, walletBalanceDao);
        registerDao(WalletCoin.class, walletCoinDao);
        registerDao(UserInfoBean.class, userInfoBeanDao);
    }
    
    public void clear() {
        addressBookDaoConfig.clearIdentityScope();
        eTHWalletDaoConfig.clearIdentityScope();
        transactionRecordDaoConfig.clearIdentityScope();
        walletBalanceDaoConfig.clearIdentityScope();
        walletCoinDaoConfig.clearIdentityScope();
        userInfoBeanDaoConfig.clearIdentityScope();
    }

    public AddressBookDao getAddressBookDao() {
        return addressBookDao;
    }

    public ETHWalletDao getETHWalletDao() {
        return eTHWalletDao;
    }

    public TransactionRecordDao getTransactionRecordDao() {
        return transactionRecordDao;
    }

    public WalletBalanceDao getWalletBalanceDao() {
        return walletBalanceDao;
    }

    public WalletCoinDao getWalletCoinDao() {
        return walletCoinDao;
    }

    public UserInfoBeanDao getUserInfoBeanDao() {
        return userInfoBeanDao;
    }

}
